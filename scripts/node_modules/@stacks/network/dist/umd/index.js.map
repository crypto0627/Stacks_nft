{"version":3,"file":"index.js","mappings":"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","sources":["webpack://StacksNetwork/webpack/universalModuleDefinition","webpack://StacksNetwork/../../node_modules/cross-fetch/dist/browser-polyfill.js","webpack://StacksNetwork/webpack/bootstrap","webpack://StacksNetwork/webpack/runtime/define property getters","webpack://StacksNetwork/webpack/runtime/hasOwnProperty shorthand","webpack://StacksNetwork/webpack/runtime/make namespace object","webpack://StacksNetwork/./src/fetch.ts","webpack://StacksNetwork/../common/dist/esm/constants.js","webpack://StacksNetwork/./src/network.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"StacksNetwork\"] = factory();\n\telse\n\t\troot[\"StacksNetwork\"] = factory();\n})(this, () => {\nreturn ","(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n})({});\n})(typeof self !== 'undefined' ? self : this);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import 'cross-fetch/polyfill';\n\n// Define a default request options and allow modification using getters, setters\n// Reference: https://developer.mozilla.org/en-US/docs/Web/API/Request/Request\nconst defaultFetchOpts: RequestInit = {\n  // By default referrer value will be client:origin: above reference link\n  referrerPolicy: 'origin', // Use origin value for referrer policy\n  // https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referrer-Policy\n};\n\n/**\n * Get fetch options\n * @category Network\n */\nexport const getFetchOptions = () => {\n  return defaultFetchOpts;\n};\n\n/**\n * Sets global fetch options for stacks.js network calls.\n *\n * @example\n * Users can change the default referrer as well as other options when fetch is used internally by stacks.js:\n * ```\n * setFetchOptions({ referrer: 'no-referrer', referrerPolicy: 'no-referrer', ...otherRequestOptions });\n * ```\n * After calling {@link setFetchOptions} all subsequent network calls will use the specified options above.\n *\n * @see MDN Request: https://developer.mozilla.org/en-US/docs/Web/API/Request/Request\n * @returns global fetch options after merging with previous options (or defaults)\n * @category Network\n * @related {@link getFetchOptions}\n */\nexport const setFetchOptions = (ops: RequestInit): RequestInit => {\n  return Object.assign(defaultFetchOpts, ops);\n};\n\n/** @internal */\nexport async function fetchWrapper(input: RequestInfo, init?: RequestInit): Promise<Response> {\n  const fetchOpts = {};\n  // Use the provided options in request options along with default or user provided values\n  Object.assign(fetchOpts, init, defaultFetchOpts);\n\n  const fetchResult = await fetch(input, fetchOpts);\n  return fetchResult;\n}\n\nexport type FetchFn = (url: string, init?: RequestInit) => Promise<Response>;\n\nexport interface RequestContext {\n  fetch: FetchFn;\n  url: string;\n  init: RequestInit;\n}\n\nexport interface ResponseContext {\n  fetch: FetchFn;\n  url: string;\n  init: RequestInit;\n  response: Response;\n}\n\nexport interface FetchParams {\n  url: string;\n  init: RequestInit;\n}\n\nexport interface FetchMiddleware {\n  pre?: (context: RequestContext) => PromiseLike<FetchParams | void> | FetchParams | void;\n  post?: (context: ResponseContext) => Promise<Response | void> | Response | void;\n}\nexport interface ApiKeyMiddlewareOpts {\n  /** The middleware / API key header will only be added to requests matching this host. */\n  host?: RegExp | string;\n  /** The http header name used for specifying the API key value. */\n  httpHeader?: string;\n  /** The API key string to specify as an http header value. */\n  apiKey: string;\n}\n\n/** @internal */\nexport function hostMatches(host: string, pattern: string | RegExp) {\n  if (typeof pattern === 'string') return pattern === host;\n  return (pattern as RegExp).exec(host);\n}\n\n/**\n * Creates a new middleware from an API key.\n * @example\n * ```\n * const apiMiddleware = createApiKeyMiddleware(\"example_e8e044a3_41d8b0fe_3dd3988ef302\");\n * const fetchFn = createFetchFn(apiMiddleware);\n * const network = new StacksMainnet({ fetchFn });\n * ```\n * @category Network\n * @related {@link createFetchFn}, {@link StacksNetwork}\n */\nexport function createApiKeyMiddleware({\n  apiKey,\n  host = /(.*)api(.*)\\.stacks\\.co$/i,\n  httpHeader = 'x-api-key',\n}: ApiKeyMiddlewareOpts): FetchMiddleware {\n  return {\n    pre: context => {\n      const reqUrl = new URL(context.url);\n      if (!hostMatches(reqUrl.host, host)) return; // Skip middleware if host does not match pattern\n\n      const headers = new Headers(context.init.headers);\n      headers.set(httpHeader, apiKey);\n      context.init.headers = headers;\n    },\n  };\n}\n\nfunction argsForCreateFetchFn(args: any[]): { fetchLib: FetchFn; middlewares: FetchMiddleware[] } {\n  let fetchLib: FetchFn = fetchWrapper;\n  let middlewares: FetchMiddleware[] = [];\n  if (args.length > 0 && typeof args[0] === 'function') {\n    fetchLib = args.shift();\n  }\n  if (args.length > 0) {\n    middlewares = args; // remaining args\n  }\n  return { fetchLib, middlewares };\n}\n\n/**\n * Creates a new network fetching function, which combines an optional fetch-compatible library with optional middlware.\n * @example\n * ```\n * const customFetch = createFetchFn(someMiddleware)\n * const customFetch = createFetchFn(fetch, someMiddleware)\n * const customFetch = createFetchFn(fetch, middlewareA, middlewareB)\n * ```\n * @category Network\n */\nexport function createFetchFn(fetchLib: FetchFn, ...middleware: FetchMiddleware[]): FetchFn;\nexport function createFetchFn(...middleware: FetchMiddleware[]): FetchFn;\nexport function createFetchFn(...args: any[]): FetchFn {\n  const { fetchLib, middlewares } = argsForCreateFetchFn(args);\n\n  const fetchFn = async (url: string, init?: RequestInit | undefined): Promise<Response> => {\n    let fetchParams = { url, init: init ?? {} };\n\n    for (const middleware of middlewares) {\n      if (typeof middleware.pre === 'function') {\n        const result = await Promise.resolve(\n          middleware.pre({\n            fetch: fetchLib,\n            ...fetchParams,\n          })\n        );\n        fetchParams = result ?? fetchParams;\n      }\n    }\n\n    let response = await fetchLib(fetchParams.url, fetchParams.init);\n\n    for (const middleware of middlewares) {\n      if (typeof middleware.post === 'function') {\n        const result = await Promise.resolve(\n          middleware.post({\n            fetch: fetchLib,\n            url: fetchParams.url,\n            init: fetchParams.init,\n            response: response?.clone() ?? response,\n          })\n        );\n        response = result ?? response;\n      }\n    }\n    return response;\n  };\n  return fetchFn;\n}\n","export var ChainID;\n(function (ChainID) {\n    ChainID[ChainID[\"Testnet\"] = 2147483648] = \"Testnet\";\n    ChainID[ChainID[\"Mainnet\"] = 1] = \"Mainnet\";\n})(ChainID || (ChainID = {}));\nexport var TransactionVersion;\n(function (TransactionVersion) {\n    TransactionVersion[TransactionVersion[\"Mainnet\"] = 0] = \"Mainnet\";\n    TransactionVersion[TransactionVersion[\"Testnet\"] = 128] = \"Testnet\";\n})(TransactionVersion || (TransactionVersion = {}));\nexport const PRIVATE_KEY_COMPRESSED_LENGTH = 33;\nexport const PRIVATE_KEY_UNCOMPRESSED_LENGTH = 32;\nexport const BLOCKSTACK_DEFAULT_GAIA_HUB_URL = 'https://hub.blockstack.org';\n//# sourceMappingURL=constants.js.map","import { TransactionVersion, ChainID } from '@stacks/common';\nimport { createFetchFn, FetchFn } from './fetch';\n\nexport const HIRO_MAINNET_DEFAULT = 'https://stacks-node-api.mainnet.stacks.co';\nexport const HIRO_TESTNET_DEFAULT = 'https://stacks-node-api.testnet.stacks.co';\nexport const HIRO_MOCKNET_DEFAULT = 'http://localhost:3999';\n\nexport interface NetworkConfig {\n  url: string;\n  fetchFn?: FetchFn;\n}\n\nexport const StacksNetworks = ['mainnet', 'testnet', 'devnet', 'mocknet'] as const;\nexport type StacksNetworkName = (typeof StacksNetworks)[number];\n\n/**\n * @related {@link StacksMainnet}, {@link StacksTestnet}, {@link StacksDevnet}, {@link StacksMocknet}\n */\nexport class StacksNetwork {\n  version = TransactionVersion.Mainnet;\n  chainId = ChainID.Mainnet;\n  bnsLookupUrl = 'https://stacks-node-api.mainnet.stacks.co';\n  broadcastEndpoint = '/v2/transactions';\n  transferFeeEstimateEndpoint = '/v2/fees/transfer';\n  transactionFeeEstimateEndpoint = '/v2/fees/transaction';\n  accountEndpoint = '/v2/accounts';\n  contractAbiEndpoint = '/v2/contracts/interface';\n  readOnlyFunctionCallEndpoint = '/v2/contracts/call-read';\n\n  readonly coreApiUrl: string;\n\n  fetchFn: FetchFn;\n\n  constructor(networkConfig: NetworkConfig) {\n    this.coreApiUrl = networkConfig.url;\n    this.fetchFn = networkConfig.fetchFn ?? createFetchFn();\n  }\n\n  static fromName = (networkName: StacksNetworkName): StacksNetwork => {\n    switch (networkName) {\n      case 'mainnet':\n        return new StacksMainnet();\n      case 'testnet':\n        return new StacksTestnet();\n      case 'devnet':\n        return new StacksDevnet();\n      case 'mocknet':\n        return new StacksMocknet();\n      default:\n        throw new Error(\n          `Invalid network name provided. Must be one of the following: ${StacksNetworks.join(\n            ', '\n          )}`\n        );\n    }\n  };\n\n  static fromNameOrNetwork = (network: StacksNetworkName | StacksNetwork) => {\n    if (typeof network !== 'string' && 'version' in network) {\n      return network;\n    }\n\n    return StacksNetwork.fromName(network);\n  };\n\n  isMainnet = () => this.version === TransactionVersion.Mainnet;\n  getBroadcastApiUrl = () => `${this.coreApiUrl}${this.broadcastEndpoint}`;\n  getTransferFeeEstimateApiUrl = () => `${this.coreApiUrl}${this.transferFeeEstimateEndpoint}`;\n  getTransactionFeeEstimateApiUrl = () =>\n    `${this.coreApiUrl}${this.transactionFeeEstimateEndpoint}`;\n  getAccountApiUrl = (address: string) =>\n    `${this.coreApiUrl}${this.accountEndpoint}/${address}?proof=0`;\n  getAccountExtendedBalancesApiUrl = (address: string) =>\n    `${this.coreApiUrl}/extended/v1/address/${address}/balances`;\n  getAbiApiUrl = (address: string, contract: string) =>\n    `${this.coreApiUrl}${this.contractAbiEndpoint}/${address}/${contract}`;\n  getReadOnlyFunctionCallApiUrl = (\n    contractAddress: string,\n    contractName: string,\n    functionName: string\n  ) =>\n    `${this.coreApiUrl}${\n      this.readOnlyFunctionCallEndpoint\n    }/${contractAddress}/${contractName}/${encodeURIComponent(functionName)}`;\n  getInfoUrl = () => `${this.coreApiUrl}/v2/info`;\n  getBlockTimeInfoUrl = () => `${this.coreApiUrl}/extended/v1/info/network_block_times`;\n  getPoxInfoUrl = () => `${this.coreApiUrl}/v2/pox`;\n  getRewardsUrl = (address: string, options?: any) => {\n    let url = `${this.coreApiUrl}/extended/v1/burnchain/rewards/${address}`;\n    if (options) {\n      url = `${url}?limit=${options.limit}&offset=${options.offset}`;\n    }\n    return url;\n  };\n  getRewardsTotalUrl = (address: string) =>\n    `${this.coreApiUrl}/extended/v1/burnchain/rewards/${address}/total`;\n  getRewardHoldersUrl = (address: string, options?: any) => {\n    let url = `${this.coreApiUrl}/extended/v1/burnchain/reward_slot_holders/${address}`;\n    if (options) {\n      url = `${url}?limit=${options.limit}&offset=${options.offset}`;\n    }\n    return url;\n  };\n  getStackerInfoUrl = (contractAddress: string, contractName: string) =>\n    `${this.coreApiUrl}${this.readOnlyFunctionCallEndpoint}\n    ${contractAddress}/${contractName}/get-stacker-info`;\n  getDataVarUrl = (contractAddress: string, contractName: string, dataVarName: string) =>\n    `${this.coreApiUrl}/v2/data_var/${contractAddress}/${contractName}/${dataVarName}?proof=0`;\n  getMapEntryUrl = (contractAddress: string, contractName: string, mapName: string) =>\n    `${this.coreApiUrl}/v2/map_entry/${contractAddress}/${contractName}/${mapName}?proof=0`;\n  getNameInfo(fullyQualifiedName: string) {\n    /*\n      TODO: Update to v2 API URL for name lookups\n    */\n    const nameLookupURL = `${this.bnsLookupUrl}/v1/names/${fullyQualifiedName}`;\n    return this.fetchFn(nameLookupURL)\n      .then(resp => {\n        if (resp.status === 404) {\n          throw new Error('Name not found');\n        } else if (resp.status !== 200) {\n          throw new Error(`Bad response status: ${resp.status}`);\n        } else {\n          return resp.json();\n        }\n      })\n      .then(nameInfo => {\n        // the returned address _should_ be in the correct network ---\n        //  stacks node gets into trouble because it tries to coerce back to mainnet\n        //  and the regtest transaction generation libraries want to use testnet addresses\n        if (nameInfo.address) {\n          return Object.assign({}, nameInfo, { address: nameInfo.address });\n        } else {\n          return nameInfo;\n        }\n      });\n  }\n}\n\n/**\n * A {@link StacksNetwork} with the parameters for the Stacks mainnet.\n * Pass a `url` option to override the default Hiro hosted Stacks node API.\n * Pass a `fetchFn` option to customize the default networking functions.\n * @example\n * ```\n * const network = new StacksMainnet();\n * const network = new StacksMainnet({ url: \"https://stacks-node-api.mainnet.stacks.co\" });\n * const network = new StacksMainnet({ fetch: createFetchFn() });\n * ```\n * @related {@link createFetchFn}, {@link createApiKeyMiddleware}\n */\nexport class StacksMainnet extends StacksNetwork {\n  version = TransactionVersion.Mainnet;\n  chainId = ChainID.Mainnet;\n\n  constructor(opts?: Partial<NetworkConfig>) {\n    super({\n      url: opts?.url ?? HIRO_MAINNET_DEFAULT,\n      fetchFn: opts?.fetchFn,\n    });\n  }\n}\n\n/**\n * A {@link StacksNetwork} with the parameters for the Stacks testnet.\n * Pass a `url` option to override the default Hiro hosted Stacks node API.\n * Pass a `fetchFn` option to customize the default networking functions.\n * @example\n * ```\n * const network = new StacksTestnet();\n * const network = new StacksTestnet({ url: \"https://stacks-node-api.testnet.stacks.co\" });\n * const network = new StacksTestnet({ fetch: createFetchFn() });\n * ```\n * @related {@link createFetchFn}, {@link createApiKeyMiddleware}\n */\nexport class StacksTestnet extends StacksNetwork {\n  version = TransactionVersion.Testnet;\n  chainId = ChainID.Testnet;\n\n  constructor(opts?: Partial<NetworkConfig>) {\n    super({\n      url: opts?.url ?? HIRO_TESTNET_DEFAULT,\n      fetchFn: opts?.fetchFn,\n    });\n  }\n}\n\n/**\n * A {@link StacksNetwork} using the testnet parameters, but `localhost:3999` as the API URL.\n */\nexport class StacksMocknet extends StacksNetwork {\n  version = TransactionVersion.Testnet;\n  chainId = ChainID.Testnet;\n\n  constructor(opts?: Partial<NetworkConfig>) {\n    super({\n      url: opts?.url ?? HIRO_MOCKNET_DEFAULT,\n      fetchFn: opts?.fetchFn,\n    });\n  }\n}\n\n/** Alias for {@link StacksMocknet} */\nexport const StacksDevnet = StacksMocknet;\n"],"names":["root","factory","exports","module","define","amd","this","self","support","searchParams","iterable","Symbol","blob","Blob","e","formData","arrayBuffer","viewClasses","isArrayBufferView","ArrayBuffer","isView","obj","indexOf","Object","prototype","toString","call","normalizeName","name","String","test","TypeError","toLowerCase","normalizeValue","value","iteratorFor","items","iterator","next","shift","done","undefined","Headers","headers","map","forEach","append","Array","isArray","header","getOwnPropertyNames","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","result","onerror","error","readBlobAsArrayBuffer","FileReader","promise","readAsArrayBuffer","bufferClone","buf","slice","view","Uint8Array","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","get","type","rejected","Error","then","text","readAsText","chars","length","i","fromCharCode","join","readArrayBufferAsText","decode","json","JSON","parse","oldValue","has","hasOwnProperty","callback","thisArg","keys","push","values","entries","methods","Request","input","options","method","upcased","url","credentials","mode","signal","toUpperCase","referrer","form","trim","split","bytes","replace","decodeURIComponent","Response","bodyInit","status","ok","statusText","clone","response","redirectStatuses","redirect","RangeError","location","DOMException","err","message","stack","create","constructor","fetch","init","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","rawHeaders","getAllResponseHeaders","line","parts","key","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","addEventListener","onreadystatechange","readyState","removeEventListener","send","polyfill","defineProperty","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","d","definition","o","enumerable","prop","r","toStringTag","defaultFetchOpts","referrerPolicy","getFetchOptions","setFetchOptions","ops","assign","async","fetchWrapper","fetchOpts","hostMatches","host","pattern","exec","createApiKeyMiddleware","apiKey","httpHeader","pre","context","URL","createFetchFn","args","fetchLib","middlewares","argsForCreateFetchFn","fetchParams","middleware","post","ChainID","TransactionVersion","HIRO_MAINNET_DEFAULT","HIRO_TESTNET_DEFAULT","HIRO_MOCKNET_DEFAULT","StacksNetworks","networkConfig","version","Mainnet","chainId","bnsLookupUrl","broadcastEndpoint","transferFeeEstimateEndpoint","transactionFeeEstimateEndpoint","accountEndpoint","contractAbiEndpoint","readOnlyFunctionCallEndpoint","isMainnet","getBroadcastApiUrl","coreApiUrl","getTransferFeeEstimateApiUrl","getTransactionFeeEstimateApiUrl","getAccountApiUrl","address","getAccountExtendedBalancesApiUrl","getAbiApiUrl","contract","getReadOnlyFunctionCallApiUrl","contractAddress","contractName","functionName","encodeURIComponent","getInfoUrl","getBlockTimeInfoUrl","getPoxInfoUrl","getRewardsUrl","limit","offset","getRewardsTotalUrl","getRewardHoldersUrl","getStackerInfoUrl","getDataVarUrl","dataVarName","getMapEntryUrl","mapName","fetchFn","getNameInfo","fullyQualifiedName","nameLookupURL","resp","nameInfo","StacksNetwork","fromName","networkName","StacksMainnet","StacksTestnet","StacksDevnet","StacksMocknet","fromNameOrNetwork","network","opts","super","Testnet"],"sourceRoot":""}